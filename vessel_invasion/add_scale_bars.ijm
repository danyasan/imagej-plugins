// @File(label = "Output directory", style = "directory") output
// @String(label = "Title contains") pattern

/* 
 *  Generate an RGD composite image of the 2-channel MAX z-projection, generated by 'z-projection_convert.ijm'
 *  Open all desired MAX_*.tif images, then run
 *  All open images will be processed and saved in output folder.
 *  Set Pattern to something common to all filenames, e.g. HJn
 */


/*
 * Macro template to process multiple open images
 */
processOpenImages();

/*
 * Processes all open images. If an image matches the provided title
 * pattern, processImage() is executed.
 */
function processOpenImages() {
	n = nImages;
	setBatchMode(true);
	for (i=1; i<=n; i++) {
		selectImage(i);
		imageTitle = getTitle();
		imageId = getImageID();
		if (matches(imageTitle, "(.*)"+pattern+"(.*)"))
			processImage(imageTitle, imageId, output);
	}
	setBatchMode(false);
}

/*
 * Processes the currently active image. Use imageId parameter
 * to re-select the input image during processing.
 */
function processImage(imageTitle, imageId, output) {
	// Do the processing here by adding your own code.
	// Leave the print statements until things work, then remove them.
	
	print("Processing: " + imageTitle);
//	truncTitle = replace(imageTitle,"MAX_","Composite_");
	pathToOutputFile = output + File.separator + imageTitle;
	print("Saving to: " + pathToOutputFile);

/*run("Brightness/Contrast...");
	run("Enhance Contrast", "saturated=0.35");
	run("Apply LUT");
	setChannel(2);
	run("Enhance Contrast", "saturated=0.35");
	run("Apply LUT");
*/
	selectWindow(imageTitle);
//green channel brightness adjust, usually between 2 and 58
/*	Stack.setChannel(1);
	setMinAndMax(2, 58);	
//red channel brightness adjust, usually between 7 and 39
	Stack.setChannel(2);
	setMinAndMax(7, 39);	
	Stack.setDisplayMode("composite");

//flatten to single image, add 200 micron scalebar, no text
	run("Stack to RGB");
	*/
	run("Scale Bar...", "width=200 height=4 font=14 color=White background=None location=[Lower Right] bold hide");
	saveAs("Tiff", pathToOutputFile);
	close();
	
}
